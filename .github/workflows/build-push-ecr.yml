name: Build, Scan, Patch, and Push to ECR

on:
  push:
    branches:
      - master

env:
  ECR_REPOSITORY: my-python-app
  EKS_CLUSTER_NAME: eks-github-actions
  AWS_REGION: us-east-1

jobs:
  build-scan-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Bandit for Python security scanning
        run: |
          pip install bandit

      - name: Run Bandit security scan
        run: |
          bandit -r . -f json -o bandit-results.json
        continue-on-error: true

      - name: Upload Bandit scan results
        uses: actions/upload-artifact@v4
        with:
          name: bandit-results
          path: bandit-results.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true

      - name: Build Docker image
        run: |
          docker build -t my-python-app:${{ github.sha }} .

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'my-python-app:${{ github.sha }}'
          format: 'json'
          output: 'trivy-results.json'
          severity: 'CRITICAL'
          exit-code: 1
        continue-on-error: true

      - name: Debug working directory
        run: |
          ls -la
          

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.json

      - name: Check Trivy scan results
        if: steps.trivy-scan.outcome == 'failure'
        run: |
          echo "Trivy found vulnerabilities in the Docker image."
          echo "Proceeding with the next steps, but please review the Trivy scan report."

      - name: Tag Docker image
        run: |
          docker tag my-python-app:${{ github.sha }} ${{ steps.login-ecr.outputs.registry }}/my-python-app:${{ github.sha }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{ steps.login-ecr.outputs.registry }}/my-python-app:${{ github.sha }}
          
      - name: Update kube config
        run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION 
      - name: Verify kubectl access
        run: |
          kubectl get nodes

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Replace the placeholder in deployment.yaml with the ECR image URI
          sed -i "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/deployment.yaml

          # Apply the Kubernetes manifests
          kubectl apply -f manifests/deployment.yaml --validate=false
          kubectl apply -f manifests/service.yaml --validate=false

###
